%clicknf:script@dut sudo=true
export CLICKPATH=/home/tom/workspace/ClickNF/
cd $CLICKPATH
~/workspace/ClickNF/bin/click --dpdk -l 0-$CPU -w ${dut:0:pci} -w ${dut:1:pci} -- conf/middlebox.click verbose=0


%clicknf:file@dut clicknf.click

// -------------------------------------------------------------------
// |                   Vars and elems definitions                    |
// -------------------------------------------------------------------

require(library test-tcp-layer2.click)

define($DEV0 ${dut:0:ifname}, $ADDR0 10.220.0.1, $MAC0 ${dut:0:mac})
define($DEV1 ${dut:1:ifname}, $ADDR1 10.221.0.1, $MAC1 ${dut:1:mac})

AddressInfo($DEV0 $ADDR0 $MAC0);
AddressInfo($DEV1 $ADDR1 $MAC1);

dpdk0 :: DPDK($DEV0, BURST 32, TX_RING_SIZE 512, RX_RING_SIZE 512, TX_IP_CHECKSUM 1, TX_TCP_CHECKSUM 1, RX_CHECKSUM 1, RX_STRIP_CRC 1);
dpdk1 :: DPDK($DEV1, BURST 32, TX_RING_SIZE 512, RX_RING_SIZE 512, TX_IP_CHECKSUM 1, TX_TCP_CHECKSUM 1, RX_CHECKSUM 1, RX_STRIP_CRC 1);

// -------------------------------------------------------------------
// |                         ARP Protocol                            |
// -------------------------------------------------------------------

arpr0 :: ARPResponder($DEV0);
arpr0[0]
  -> dpdk0;

arpq0 :: ARPQuerier($DEV0, SHAREDPKT true, TIMEOUT 0, POLL_TIMEOUT 0);
arpq0[0]     // TCP/IP Packet
//  -> SetTCPChecksum(SHAREDPKT true)
//  -> SetIPChecksum(SHAREDPKT true)
  -> dpdk0;
arpq0[1]     // ARP Query
  -> dpdk0;

arpr1 :: ARPResponder($DEV1);
arpr1
  -> dpdk1;

arpq1 :: ARPQuerier($DEV1, SHAREDPKT true, TIMEOUT 0, POLL_TIMEOUT 0);
arpq1[0]     // TCP/IP Packet
//  -> SetTCPChecksum(SHAREDPKT true)
//  -> SetIPChecksum(SHAREDPKT true)
  -> dpdk1;
arpq1[1]     // ARP Query
  -> dpdk1;

// -------------------------------------------------------------------
// |                            RX packets                           |
// -------------------------------------------------------------------

dpdk0
  -> HostEtherFilter($DEV0)
  -> class0 :: FastClassifier(12/0800,         // IP - 1st out of FastClassifier may be send batches
                             12/0806 20/0002, // ARP response
                             12/0806 20/0001); // ARP query
     class0[2] -> [0]arpr0
              -> dpdk0;
     class0[1] -> [1]arpq0;
     class0[0] -> Strip(14)
              -> CheckIPHeader(CHECKSUM false)
              -> CheckTCPHeader(CHECKSUM false)
              -> GetIPAddress(16)   // This only works with nodes in the same network
              -> [0]arpq1;



dpdk1
  -> HostEtherFilter($DEV1)
  -> class1 :: FastClassifier(12/0800,         // IP - 1st out of FastClassifier may be send batches
                             12/0806 20/0002, // ARP response
                             12/0806 20/0001); // ARP query
     class1[2] -> [0]arpr1
              -> dpdk1;
     class1[1] -> [1]arpq1;
     class1[0] -> Strip(14)
              -> CheckIPHeader(CHECKSUM false)
              -> CheckTCPHeader(CHECKSUM false)

       -> GetIPAddress(16)   // This only works with nodes in the same network
       -> [0]arpq0;

